PREFIX dbpediaowl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX tmg: <http://rdf.telegraph.co.uk/resources/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX movie: <http://rdf.telegraph.co.uk/ontology/movies#>
PREFIX person: <http://rdf.telegraph.co.uk/ontology/person#>
PREFIX event: <http://rdf.telegraph.co.uk/ontology/event#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>

CONSTRUCT {
        ?actorUri movie:featuredIn ?movieUri ;
                person:biography ?abstract ;
                person:hasDateOfBirth ?birthdate ;
                person:hasPlaceOfBirth ?birthplace ;
                foaf:name ?fullname ;
                foaf:givenName ?givenname ;
                foaf:familyName ?surname ;
                foaf:depiction ?depiction .

        ?movieUri dc:title ?movieTitle

} WHERE {
        ?person dbpediaowl:abstract ?abstract ;
                dbpediaowl:birthDate ?birthdate ;
                foaf:depiction ?depiction ;
                foaf:givenName ?givenname ;
                foaf:surname ?surname .

        {
                ?amovie dbpediaowl:starring ?person ;
                        rdfs:label ?movieTitle .
                FILTER(langMatches(lang(?movieTitle), "EN"))
        } UNION {
                ?amovie dbpediaowl:director ?person ;
                        rdfs:label ?movieTitle .
                FILTER(langMatches(lang(?movieTitle), "EN"))
        } UNION {
                ?amovie dbpediaowl:guest ?person ;
                        rdfs:label ?movieTitle .
                FILTER(langMatches(lang(?movieTitle), "EN"))
        }

        OPTIONAL {
                ?person dbpprop:birthPlace ?birthplace .
        }

        OPTIONAL {
                ?person dbpprop:placeOfBirth ?birthplace .
        }

        OPTIONAL {
                ?person dbpediaowl:spouse ?spouse .
                ?spouse foaf:givenName ?sgivenname ;
                        foaf:surname ?ssurname .
                BIND(IRI(CONCAT("http://rdf.telegraph.co.uk/resources/", REPLACE(LCASE(?sgivenname), "[^a-z]+", "_"), "-", REPLACE(LCASE(?ssurname), "[^a-z]+", "_"))) AS ?spouseUri)
        }
        FILTER(langMatches(lang(?abstract), "EN"))
        BIND(IRI(CONCAT("http://rdf.telegraph.co.uk/resources/", REPLACE(LCASE(?givenname), "[^a-z]+", "_"), "-", REPLACE(LCASE(?surname), "[^a-z]+", "_"))) AS ?actorUri)
        BIND(IRI(CONCAT("http://rdf.telegraph.co.uk/resources/", REPLACE(LCASE(?movieTitle), "[^a-z]+", "_"))) AS ?movieUri)
        BIND(CONCAT(?givenname, " ", ?surname) AS ?fullname)
}